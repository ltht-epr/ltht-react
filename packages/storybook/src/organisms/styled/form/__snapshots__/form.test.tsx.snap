// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Form matches snapshot: wrapper mount 1`] = `
.emotion-8 {
  color: #231f20;
  font-family: 'SF Pro Text','SF Pro Icons','Helvetica Neue',Helvetica,Arial,sans-serif;
  font-size: 0.8rem;
  background: #FFFFFF;
  color: #231f20;
  margin-bottom: 1rem;
  border-radius: 4px;
  box-shadow: 0px 2px 1px -1px rgba(102,102,102,0.1), 0px 1px 1px 0px rgba(102,102,102,0.15), 0px 1px 3px 0px rgba(102,102,102,.6);
  -webkit-font-smoothing: antialiased;
}

.emotion-8 *,
.emotion-8 ::before,
.emotion-8 ::after {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

.emotion-8 * {
  margin: 0;
  padding: 0;
}

.emotion-8 h3 {
  font-size: 1rem;
}

@media only screen and (min-width:768px) {
  .emotion-8 {
    font-size: 0.9rem;
  }

  .emotion-8 h3 {
    font-size: 1.1rem;
  }
}

@media only screen and (min-width:1024px) {
  .emotion-8 {
    font-size: 1rem;
  }

  .emotion-8 h3 {
    font-size: 1.2rem;
  }
}

@media only screen and (min-width:1200px) {
  .emotion-8 {
    font-size: 1.1rem;
  }

  .emotion-8 h3 {
    font-size: 1.3rem;
  }
}

.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0.5rem !important;
}

.emotion-7 {
  padding: 0 0.5rem 0 0.5rem !important;
}

.emotion-7 > dl:first-of-type {
  margin-top: 0 !important;
}

.emotion-6 {
  margin: 0rem;
}

.emotion-2 {
  display: block;
  position: relative;
  margin-bottom: 0.5rem;
}

.emotion-1 {
  padding-left: 1.25rem;
  background-color: #ddefc7;
}

.emotion-1 input {
  position: absolute;
  margin-top: 0.15rem;
  margin-left: -1.25rem;
}

.emotion-1 label {
  display: inline-block;
  margin-bottom: 0;
}

.emotion-3 {
  padding-left: 1.25rem;
}

.emotion-3 input {
  position: absolute;
  margin-top: 0.15rem;
  margin-left: -1.25rem;
}

.emotion-3 label {
  display: inline-block;
  margin-bottom: 0;
}

.emotion-5 {
  display: block;
  text-align: center;
  white-space: nowrap;
  border: 1px solid transparent;
  padding: 0.375rem 0.75rem;
  font-size: 1rem;
  line-height: 1.5;
  border-radius: 4px;
  width: 100%;
  color: #FFFFFF;
  background-color: #003087;
}

.emotion-5:hover:not([disabled]) {
  cursor: pointer;
}

.emotion-5:disabled {
  opacity: 0.65;
}

@media only screen and (min-width:1024px) {
  .emotion-5 {
    display: inline-block;
    vertical-align: middle;
    width: auto;
  }
}

.emotion-5:hover {
  background-color: #002a6e;
}

.emotion-5:disabled {
  background-color: #406aae;
}

<Card>
  <div
    className="emotion-8"
  >
    <CardHeader>
      <div
        className="emotion-0"
        onClick={[Function]}
        title=""
      >
        <h3>
          Form example
        </h3>
      </div>
    </CardHeader>
    <CardBody>
      <div
        className="emotion-7"
      >
        <Form
          submitHandler={[Function]}
        >
          <form
            className="emotion-6"
            onSubmit={[Function]}
          >
            <FormCheck>
              <div
                className="form-check emotion-2"
              >
                <RadioButton
                  changeHandler={[Function]}
                  checked={true}
                  id="1"
                  label="Option 1"
                  value="1"
                >
                  <div
                    className="emotion-1"
                  >
                    <input
                      checked={true}
                      id="1"
                      onChange={[Function]}
                      type="radio"
                      value="1"
                    />
                    <label
                      htmlFor="1"
                    >
                      Option 1
                    </label>
                  </div>
                </RadioButton>
              </div>
            </FormCheck>
            <FormCheck>
              <div
                className="form-check emotion-2"
              >
                <RadioButton
                  changeHandler={[Function]}
                  checked={false}
                  id="2"
                  label="Option 2"
                  value="2"
                >
                  <div
                    className="emotion-3"
                  >
                    <input
                      checked={false}
                      id="2"
                      onChange={[Function]}
                      type="radio"
                      value="2"
                    />
                    <label
                      htmlFor="2"
                    >
                      Option 2
                    </label>
                  </div>
                </RadioButton>
              </div>
            </FormCheck>
            <PrimaryButton
              disabled={true}
              type="submit"
              value="Submit"
            >
              <Button
                buttonStyle="primary"
                disabled={true}
                type="submit"
                value="Submit"
              >
                <button
                  className="emotion-5"
                  disabled={true}
                  type="submit"
                >
                  Submit
                </button>
              </Button>
            </PrimaryButton>
          </form>
        </Form>
      </div>
    </CardBody>
  </div>
</Card>
`;
