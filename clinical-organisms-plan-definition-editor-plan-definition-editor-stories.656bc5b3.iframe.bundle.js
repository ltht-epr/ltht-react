"use strict";(self.webpackChunk_ltht_react_storybook=self.webpackChunk_ltht_react_storybook||[]).push([[7795],{"./src/clinical/organisms/plan-definition-editor/plan-definition-editor.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Editor:()=>Editor,__namedExportsOrder:()=>__namedExportsOrder,default:()=>plan_definition_editor_stories});var react=__webpack_require__("../../node_modules/react/index.js"),lib=__webpack_require__("../../components/styled/card/lib/index.js"),lib_default=__webpack_require__.n(lib),plan_definition_editor_lib=__webpack_require__("../../components/clinical/plan-definition-editor/lib/index.js"),plan_definition_editor_lib_default=__webpack_require__.n(plan_definition_editor_lib),types_lib=__webpack_require__("../types/lib/index.js");const planDefinition={id:"cd44e626-267c-46b1-8f77-60f24c645061",metadata:{requestedWhen:(new Date).toISOString(),isRedacted:!1,dataSources:[]},url:"https://cpm.elseviercareplans.com/public/careplan/CPG_IP_Pneumonia-v2022-en-gb",goal:[{elementId:"Goal/GIP fluid pneumonia",category:{coding:[{code:"clinical",system:"https://elsevier.com/goal-type",display:"Clinical"}]},description:{text:"Fluid Balance"}},{elementId:"Goal/GIP infection pneumonia",category:{coding:[{code:"clinical",system:"https://elsevier.com/goal-type",display:"Clinical"}]},description:{text:"Resolution of Infection Signs and Symptoms"}},{elementId:"Goal/GIP oxygen vent pneumonia",category:{coding:[{code:"clinical",system:"https://elsevier.com/goal-type",display:"Clinical"}]},description:{text:"Effective Oxygenation and Ventilation"}},{elementId:"Goal/EDG pneumonia1 overview",category:{coding:[{code:"educational",system:"https://elsevier.com/goal-type",display:"Educational"}]},description:{text:"Pneumonia: Education: Overview"}},{elementId:"Goal/EDG pneumonia5 manage",category:{coding:[{code:"educational",system:"https://elsevier.com/goal-type",display:"Educational"}]},description:{text:"Pneumonia: Education: Self Management"}},{elementId:"Goal/EDG pneumonia6 pmd",category:{coding:[{code:"educational",system:"https://elsevier.com/goal-type",display:"Educational"}]},description:{text:"Pneumonia: Education: When to Seek Medical Attention"}},{elementId:"Goal/EDG pneumonia text",category:{coding:[{code:"educational",system:"https://elsevier.com/goal-type",display:"Educational"}]},description:{text:"Pneumonia: Text"}}],name:"Elsevier Pneumonia S22",title:"Pneumonia",topic:[{text:"bacterial"},{text:"infection"},{text:"pneumonia"},{text:"pulmonary"},{text:"viral"}],action:[{elementId:"Action/PP Pneumonia Fluid UB",code:[{coding:[{code:"problem",system:"https://elsevier.com/action-type",display:"Problem"}]}],action:[{elementId:"Action/INVP fluid balance pneumonia FT",code:[{coding:[{code:"intervention-plan",system:"https://elsevier.com/action-type",display:"Intervention plan"}]}],action:[{elementId:"Action/INVG fluid electrolyte management",code:[{coding:[{code:"intervention",system:"https://elsevier.com/action-type",display:"Intervention"}]}],description:"Fluid/Electrolyte Management"}],description:"Monitor and Manage Fluid Balance"}],goalId:["GIP fluid pneumonia"],extension:[{url:"https://elsevier.com/evidence/url",valueString:"https://cpm.elseviercareplans.com/public/careplan/CPG_IP_Pneumonia-v2022-en-gb"}],description:"Fluid Imbalance (Pneumonia)"},{elementId:"Action/PP Pneumonia Infection UB",code:[{coding:[{code:"problem",system:"https://elsevier.com/action-type",display:"Problem"}]}],action:[{elementId:"Action/INVP pneumonia prevent infection prog FT",code:[{coding:[{code:"intervention-plan",system:"https://elsevier.com/action-type",display:"Intervention plan"}]}],action:[{elementId:"Action/INV fever comfort",code:[{coding:[{code:"intervention",system:"https://elsevier.com/action-type",display:"Intervention"}]}],description:"Fever Reduction/Comfort Measures"},{elementId:"Action/INV isolation precautions",code:[{coding:[{code:"intervention",system:"https://elsevier.com/action-type",display:"Intervention"}]}],description:"Isolation Precautions"},{elementId:"Action/INVG infection manage",code:[{coding:[{code:"intervention",system:"https://elsevier.com/action-type",display:"Intervention"}]}],description:"Infection Management"}],description:"Prevent Infection Progression"}],goalId:["GIP infection pneumonia"],extension:[{url:"https://elsevier.com/evidence/url",valueString:"https://cpm.elseviercareplans.com/public/careplan/CPG_IP_Pneumonia-v2022-en-gb"}],description:"Infection (Pneumonia)"},{elementId:"Action/PP Pneumonia Resp Comp UB",code:[{coding:[{code:"problem",system:"https://elsevier.com/action-type",display:"Problem"}]}],action:[{elementId:"Action/INVP airway clearance pneumonia FT",code:[{coding:[{code:"intervention-plan",system:"https://elsevier.com/action-type",display:"Intervention plan"}]}],action:[{elementId:"Action/INVG breathing airway clear",code:[{coding:[{code:"intervention",system:"https://elsevier.com/action-type",display:"Intervention"}]}],description:"Breathing Techniques/Airway Clearance"},{elementId:"Action/INV cough deep breath",code:[{coding:[{code:"intervention",system:"https://elsevier.com/action-type",display:"Intervention"}]}],description:"Cough and Deep Breathing"}],description:"Promote Airway Secretion Clearance"},{elementId:"Action/INVP oxygen vent perfusion pneumonia FT",code:[{coding:[{code:"intervention-plan",system:"https://elsevier.com/action-type",display:"Intervention plan"}]}],action:[{elementId:"Action/INVG airway vent management",code:[{coding:[{code:"intervention",system:"https://elsevier.com/action-type",display:"Intervention"}]}],description:"Airway/Ventilation Management"},{elementId:"Action/INV position hob",code:[{coding:[{code:"intervention",system:"https://elsevier.com/action-type",display:"Intervention"}]}],description:"Head of Bed (HOB)"}],description:"Optimise Oxygenation and Ventilation"}],goalId:["GIP oxygen vent pneumonia"],extension:[{url:"https://elsevier.com/evidence/url",valueString:"https://cpm.elseviercareplans.com/public/careplan/CPG_IP_Pneumonia-v2022-en-gb"}],description:"Respiratory Compromise (Pneumonia)"},{elementId:"Action/EDG pneumonia1 overview",code:[{coding:[{code:"education",system:"https://elsevier.com/action-type",display:"Education"}]}],goalId:["EDG pneumonia1 overview"],description:"Pneumonia: Education: Overview"},{elementId:"Action/EDG pneumonia5 manage",code:[{coding:[{code:"education",system:"https://elsevier.com/action-type",display:"Education"}]}],goalId:["EDG pneumonia5 manage"],description:"Pneumonia: Education: Self Management"},{elementId:"Action/EDG pneumonia6 pmd",code:[{coding:[{code:"education",system:"https://elsevier.com/action-type",display:"Education"}]}],goalId:["EDG pneumonia6 pmd"],description:"Pneumonia: Education: When to Seek Medical Attention"},{elementId:"Action/EDG pneumonia text",code:[{coding:[{code:"education",system:"https://elsevier.com/action-type",display:"Education"}]}],goalId:["EDG pneumonia text"],description:"Pneumonia: Text"}],status:types_lib.PlanDefinitionStatus.Active,version:"Elsevier/2022.04.22",publisher:"Elsevier",identifier:[{value:"PlanDefinition/Elsevier/CPG IP Pneumonia",system:"https://leedsth.nhs.uk/ehr/plan-definition/publisher-series-id"}],useContext:[{code:{code:"Population",system:"https://leedsth.nhs.uk/ehr/care-plan-definition/usage-context-type"},valueCodeableConcept:{coding:[{code:"Adult",system:"https://leedsth.nhs.uk/ehr/care-plan-definition/usage-context",display:"Adult"}]}},{code:{code:"Population",system:"https://leedsth.nhs.uk/ehr/care-plan-definition/usage-context-type"},valueCodeableConcept:{coding:[{code:"Obstetrics",system:"https://leedsth.nhs.uk/ehr/care-plan-definition/usage-context",display:"Obstetrics"}]}}],description:"Pneumonia (Adult, Obstetrics Inpatient)"};var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const Editor=()=>{const[selectedProblemIds,setSelectedProblemIds]=(0,react.useState)([]);return(0,jsx_runtime.jsxs)(lib_default(),{children:[(0,jsx_runtime.jsx)(lib_default().Header,{children:(0,jsx_runtime.jsx)(lib_default().Title,{children:"Plan definition"})}),(0,jsx_runtime.jsx)(lib_default().Body,{children:(0,jsx_runtime.jsx)(plan_definition_editor_lib_default(),{planDefinition,onProblemChange:e=>{console.log("onProblemChange",e);let newProblemIds=[...selectedProblemIds];for(const problemChange of e)if(!0===problemChange.state)newProblemIds=Array.from(new Set([...newProblemIds,problemChange.problemId]));else{const existingItemIndex=newProblemIds.findIndex((x=>x===problemChange.problemId));existingItemIndex>-1&&(newProblemIds=[...newProblemIds.slice(0,existingItemIndex),...newProblemIds.slice(existingItemIndex+1)])}setSelectedProblemIds(newProblemIds)},selectedProblemIds})})]})};Editor.displayName="Editor";const plan_definition_editor_stories={title:"Clinical/Organisms/Plan Definition Editor"};Editor.parameters={...Editor.parameters,docs:{...Editor.parameters?.docs,source:{originalSource:"() => {\n  const [selectedProblemIds, setSelectedProblemIds] = useState<string[]>([]);\n  const handleProblemChange: OnProblemChange = e => {\n    // eslint-disable-next-line no-console\n    console.log('onProblemChange', e);\n    let newProblemIds = [...selectedProblemIds];\n    for (const problemChange of e) {\n      if (problemChange.state === true) {\n        newProblemIds = Array.from(new Set([...newProblemIds, problemChange.problemId]));\n      } else {\n        const existingItemIndex = newProblemIds.findIndex(x => x === problemChange.problemId);\n        if (existingItemIndex > -1) {\n          newProblemIds = [...newProblemIds.slice(0, existingItemIndex), ...newProblemIds.slice(existingItemIndex + 1)];\n        }\n      }\n    }\n    setSelectedProblemIds(newProblemIds);\n  };\n  return <Card>\r\n      <Card.Header>\r\n        <Card.Title>Plan definition</Card.Title>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <PlanDefinitionEditor planDefinition={planDefinition} onProblemChange={handleProblemChange} selectedProblemIds={selectedProblemIds} />\r\n      </Card.Body>\r\n    </Card>;\n}",...Editor.parameters?.docs?.source}}};const __namedExportsOrder=["Editor"]},"../../components/clinical/plan-definition-editor/lib/index.js":function(__unused_webpack_module,exports,__webpack_require__){var __makeTemplateObject=this&&this.__makeTemplateObject||function(cooked,raw){return Object.defineProperty?Object.defineProperty(cooked,"raw",{value:raw}):cooked.raw=raw,cooked},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SelectedPlanDetail=void 0;var templateObject_1,templateObject_2,templateObject_3,templateObject_4,templateObject_5,templateObject_6,templateObject_7,jsx_runtime_1=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react_1=__webpack_require__("../../node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),styled_1=__importDefault(__webpack_require__("../../node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js")),styles_1=__webpack_require__("../styles/lib/index.js"),icon_1=__importDefault(__webpack_require__("../../components/styled/icon/lib/index.js")),input_1=__webpack_require__("../../components/styled/input/lib/index.js"),react_2=__webpack_require__("../../node_modules/react/index.js"),toggleInputMixin=(0,react_1.css)(templateObject_1||(templateObject_1=__makeTemplateObject(["\n  > div:first-of-type {\n    text-align: right;\n    width: ",";\n    padding-right: 1rem;\n  }\n"],["\n  > div:first-of-type {\n    text-align: right;\n    width: ",";\n    padding-right: 1rem;\n  }\n"])),"3.5rem"),StyledProblemToggleRow=styled_1.default.div(templateObject_2||(templateObject_2=__makeTemplateObject(["\n  display: flex;\n  font-weight: bold;\n  align-items: center;\n  ","\n  margin-bottom: 0.25rem;\n"],["\n  display: flex;\n  font-weight: bold;\n  align-items: center;\n  ","\n  margin-bottom: 0.25rem;\n"])),toggleInputMixin),StyledEducationToggleRow=styled_1.default.div(templateObject_3||(templateObject_3=__makeTemplateObject(["\n  display: flex;\n  align-items: center;\n  ","\n  margin-bottom: 0.25rem;\n\n  > label svg {\n    margin-right: 0.5rem;\n  }\n"],["\n  display: flex;\n  align-items: center;\n  ","\n  margin-bottom: 0.25rem;\n\n  > label svg {\n    margin-right: 0.5rem;\n  }\n"])),toggleInputMixin),StyledTargetRow=styled_1.default.div(templateObject_4||(templateObject_4=__makeTemplateObject(["\n  display: flex;\n  align-items: center;\n  ","\n\n  svg {\n    align: right;\n    margin-right: 1rem;\n  }\n\n  > span:first-of-type {\n    text-align: right;\n    display: block;\n    width: ",";\n  }\n\n  > div:first-of-type {\n    flex: 1;\n    text-align: left;\n  }\n"],["\n  display: flex;\n  align-items: center;\n  ","\n\n  svg {\n    align: right;\n    margin-right: 1rem;\n  }\n\n  > span:first-of-type {\n    text-align: right;\n    display: block;\n    width: ",";\n  }\n\n  > div:first-of-type {\n    flex: 1;\n    text-align: left;\n  }\n"])),toggleInputMixin,"3.5rem"),StyledListItem=styled_1.default.li(templateObject_5||(templateObject_5=__makeTemplateObject(["\n  margin-bottom: 1rem;\n\n  "," {\n  }\n"],["\n  margin-bottom: 1rem;\n\n  "," {\n  }\n"])),styles_1.WIDESCREEN_MINIMUM_MEDIA_QUERY),StyledSectionToggle=styled_1.default.div(templateObject_6||(templateObject_6=__makeTemplateObject(["\n  background-color: ",";\n  font-weight: bold;\n  color: black;\n  display: flex;\n  align-items: center;\n  padding: 0.5rem 0.25rem;\n  ","\n"],["\n  background-color: ",";\n  font-weight: bold;\n  color: black;\n  display: flex;\n  align-items: center;\n  padding: 0.5rem 0.25rem;\n  ","\n"])),styles_1.BANNER_COLOURS.INFO.BACKGROUND,toggleInputMixin),StyledProblemSection=styled_1.default.ul(templateObject_7||(templateObject_7=__makeTemplateObject(["\n  list-style: none;\n  padding: 0.25rem 0.25rem;\n  margin-bottom: 1rem;\n"],["\n  list-style: none;\n  padding: 0.25rem 0.25rem;\n  margin-bottom: 1rem;\n"])));exports.SelectedPlanDetail=function(_a){var planDefinition=_a.planDefinition,selectedProblemIds=_a.selectedProblemIds,onProblemChange=_a.onProblemChange,_b=(0,react_2.useMemo)((function(){var _a,_b,problemActions=null===(_a=planDefinition.action)||void 0===_a?void 0:_a.filter((function(action){var _a;return(null==action?void 0:action.code)&&(null==action?void 0:action.code[0])&&(null==action?void 0:action.code[0].coding)&&"problem"===(null===(_a=null==action?void 0:action.code[0].coding[0])||void 0===_a?void 0:_a.code)})),educationActions=null===(_b=planDefinition.action)||void 0===_b?void 0:_b.filter((function(action){var _a;return(null==action?void 0:action.code)&&(null==action?void 0:action.code[0])&&(null==action?void 0:action.code[0].coding)&&"education"===(null===(_a=null==action?void 0:action.code[0].coding[0])||void 0===_a?void 0:_a.code)}));return{problemActions,educationActions}}),[planDefinition.action]),problemActions=_b.problemActions,educationActions=_b.educationActions,_c=(0,react_2.useMemo)((function(){var _a,_b;return{allProblemsOn:null!==(_a=null==problemActions?void 0:problemActions.map((function(pa){return null==pa?void 0:pa.elementId})).every((function(id){return selectedProblemIds.includes(id)})))&&void 0!==_a&&_a,allEducationOn:null!==(_b=null==educationActions?void 0:educationActions.map((function(ea){return null==ea?void 0:ea.elementId})).every((function(id){return selectedProblemIds.includes(id)})))&&void 0!==_b&&_b}}),[educationActions,problemActions,selectedProblemIds]),allProblemsOn=_c.allProblemsOn,allEducationOn=_c.allEducationOn,handleSingleActionChange=function(e){onProblemChange(e)};return(0,jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment,{children:[(0,jsx_runtime_1.jsxs)(StyledSectionToggle,{children:[(0,jsx_runtime_1.jsx)("div",{children:(0,jsx_runtime_1.jsx)(input_1.Toggle,{checked:allProblemsOn,onChange:function(e){return function(e){var newState=null==problemActions?void 0:problemActions.map((function(p){return{problemId:null==p?void 0:p.elementId,state:e.target.checked}}));newState&&onProblemChange(newState)}(e)},id:"problem-toggle-all"})}),(0,jsx_runtime_1.jsx)("label",{htmlFor:"problem-toggle-all",children:"Patient Problems"})]}),(0,jsx_runtime_1.jsx)(StyledProblemSection,{children:null==problemActions?void 0:problemActions.map((function(problem,pidx){var _a,_b,_c,goal=null===(_a=planDefinition.goal)||void 0===_a?void 0:_a.find((function(g){var _a;return(null==problem?void 0:problem.goalId)&&problem.goalId.length>0&&(null===(_a=null==g?void 0:g.elementId)||void 0===_a?void 0:_a.includes(problem.goalId[0]))}));return(0,jsx_runtime_1.jsxs)(StyledListItem,{children:[(0,jsx_runtime_1.jsxs)(StyledProblemToggleRow,{children:[(0,jsx_runtime_1.jsx)("div",{children:(0,jsx_runtime_1.jsx)(input_1.Toggle,{checked:selectedProblemIds.includes(null==problem?void 0:problem.elementId),onChange:function(e){return handleSingleActionChange([{problemId:null==problem?void 0:problem.elementId,state:e.target.checked}])},id:"problem-".concat(pidx)})}),(0,jsx_runtime_1.jsx)("label",{htmlFor:"problem-".concat(pidx),children:null==problem?void 0:problem.description})]}),(0,jsx_runtime_1.jsxs)("div",{children:[(0,jsx_runtime_1.jsxs)(StyledTargetRow,{children:[(0,jsx_runtime_1.jsx)("span",{children:(0,jsx_runtime_1.jsx)(icon_1.default,{type:"bullseye",size:"large"})}),(0,jsx_runtime_1.jsx)("div",{children:null===(_b=null==goal?void 0:goal.description)||void 0===_b?void 0:_b.text})]}),null===(_c=null==problem?void 0:problem.action)||void 0===_c?void 0:_c.map((function(interventionPlan,ipidx){var _a;return(0,jsx_runtime_1.jsx)(StyledTargetRow,{children:(0,jsx_runtime_1.jsxs)("div",{children:[(0,jsx_runtime_1.jsx)("p",{children:null==interventionPlan?void 0:interventionPlan.description}),(0,jsx_runtime_1.jsx)("ul",{children:null===(_a=null==interventionPlan?void 0:interventionPlan.action)||void 0===_a?void 0:_a.map((function(intervention,idx){return(0,jsx_runtime_1.jsx)("li",{children:null==intervention?void 0:intervention.description},"intervention-".concat(idx))}))})]})},"intervention-plan-".concat(ipidx))}))]})]},"problem-".concat(pidx))}))}),(0,jsx_runtime_1.jsxs)(StyledSectionToggle,{children:[(0,jsx_runtime_1.jsx)("div",{children:(0,jsx_runtime_1.jsx)(input_1.Toggle,{checked:allEducationOn,onChange:function(e){return function(e){var newState=null==educationActions?void 0:educationActions.map((function(p){return{problemId:null==p?void 0:p.elementId,state:e.target.checked}}));newState&&onProblemChange(newState)}(e)},id:"education-toggle-all"})}),(0,jsx_runtime_1.jsx)("label",{htmlFor:"education-toggle-all",children:"Patient Education"})]}),(0,jsx_runtime_1.jsx)(StyledProblemSection,{children:(0,jsx_runtime_1.jsx)(StyledListItem,{children:(0,jsx_runtime_1.jsx)("div",{children:null==educationActions?void 0:educationActions.map((function(g,eaidx){return(0,jsx_runtime_1.jsxs)(StyledEducationToggleRow,{children:[(0,jsx_runtime_1.jsx)("div",{children:(0,jsx_runtime_1.jsx)(input_1.Toggle,{checked:selectedProblemIds.includes(null==g?void 0:g.elementId),onChange:function(e){return handleSingleActionChange([{problemId:null==g?void 0:g.elementId,state:e.target.checked}])},id:"education-".concat(eaidx)})}),(0,jsx_runtime_1.jsxs)("label",{htmlFor:"education-".concat(eaidx),children:[(0,jsx_runtime_1.jsx)(icon_1.default,{type:"bullseye",size:"large"}),null==g?void 0:g.description]})]},"education-".concat(eaidx))}))})})})]})},exports.default=exports.SelectedPlanDetail}}]);